v4.3.0 (2017-11-23)
---------------------------
* added load balancing (ArangoDB.Builder.loadBalancingStrategy())
* added automatic acquiring of hosts for load balancing or as fallback (ArangoDB.Builder.acquireHostList())

v4.2.7 (2017-11-03)
---------------------------
* added ArangoGraph.exists()
* fixed deserialization of BigDecimal

v4.2.6 (2017-10-23)
---------------------------
* issue #151: fixed de-/serialization of negative int values
* exclude junit dependency of json-simple

v4.2.5 (2017-10-16)
---------------------------
* issue #146: added ArangoCollection.exists()
* added ArangoDatabase.exists()
* issue #152: added BaseDocument.setId(String)
* added GraphCreateOptions.replicationFactor(Integer)
* issue #156: ArangoDB.shutdown() now closes all connections 

v4.2.4 (2017-09-04)
---------------------------
* fixed ArangoDatabase.transaction(): ignore null result
* added properties validation arangodb.host
* added ArangoCollection.ensure<IndexType>Index()
* made ArangoCollection.create<IndexType>Index() deprecated
* let ArangoCursor implement Iterable
* fixed issue #145: ArangoCollection.updateDocument()
* fixed issue #145: ArangoVertexCollection.updateVertex()
* fixed issue #145: ArangoEdgeCollection.updateEdge()

v4.2.3 (2017-07-31)
---------------------------
* added ArangoDatabase.getPermissions(String)
* added ArangoCollection.getPermissions(String)
* added ArangoDB.grantDefaultDatabaseAccess(String, Permissions)
* added ArangoDB.grantDefaultCollectionAccess(String, Permissions)
* added ArangoDatabase.grantDefaultCollectionAccess(String, Permissions)
* fixed DateUtil (thread-safe)

v4.2.2 (2017-07-20)
---------------------------
* added ArangoDatabase.grantAccess(String, Permissions)
* added ArangoCollection.grantAccess(String, Permissions)
* added ArangoDatabase.resetAccess(String)
* added ArangoCollection.resetAccess(String)
* added ArangoDB.updateUserDefaultDatabaseAccess(String, Permissions)
* added ArangoDB.updateUserDefaultCollectionAccess(String, Permissions)
* added ArangoDatabase.updateUserDefaultCollectionAccess(String, Permissions)
* added ArangoCollection.getDocuments(Collection<String>, Class)
* added connection/handshake retry on same host
* added deduplicate field for hash/skiplist index

v4.2.1 (2017-06-20)
---------------------------
* fixed deserializing of internal field _id

v4.2.0 (2017-06-14)
---------------------------
* added ArangoDBVersion.getLicense()
* added ArangoDB.getRole()
* added ArangoDBException.getException()
* added protocol switch (ArangoDB.Builder.useProtocol(Protocol))
  * Protocol.VST = VeclocyStream (default)
  * Protocol.HTTP_JSON =  Json over HTTP
  * Protocol.HTTP_VPACK = VelocyPack over HTTP

v4.1.12 (2017-04-13)
---------------------------
* added ArangoDatabase.cursor() (issue #116)
* optimized ArangoDB.Builder for better multi thread support
* fixed VPackSlice float/double bug

v4.1.11 (2017-03-24)
---------------------------
* fixed exception handling in Connection (issue #110)
* fixed NPE in ArangoCursor (issue #112)
* extracted VelocyPack implementation to https://github.com/arangodb/java-velocypack
* added convenience methods (ArangoDatabase.arango(), ArangoCollection.db(), ArangoGraph.db())
* added convenience methods (ArangoCollection.getIndex(String), .deleteIndex(key))
* added connection pooling (issue #103)
* added extension point for VelocyPack serialization (ArangoDB.registerModule())
* added support for replacing build-in VelocyPack serializer/deserializer
* added ArangoDatabase.getVersion(), ArangoDatabase.getAccessibleDatabases()

v4.1.10 (2017-02-22)
---------------------------
* changed velocystream message sending to async
* changed return value of getVertex/getEdge to null if not exists
* added support for multiple hosts as fallbacks
* added support serializing collections with null elements
* added support serializing non-generic classes that extend collections
* added support serializing/deserializing byte and Byte
* added default value "root" for user
* fixed serialization of additionalFields for objects and maps
* fixed VPack parsing (arrays of specific length)

v4.1.9 (2017-02-10)
---------------------------
* added missing IndexType.edge
* fixed Connection (thread-safe)
* fixed URI encoding

v4.1.8 (2017-02-03)
---------------------------
* changed java.util.Date serialization from VPack.date to VPack.string (ISO 8601)
* changed java.sql.Date serialization from VPack.date to VPack.string (ISO 8601)
* changed java.sql.Timestamp serialization from VPack.date to VPack.string (ISO 8601)
* added byte[] de-/serialization from/to VPack.string (Base64)
* added ArangoCollection.drop(isSystem)
* improved ArangoDBException with responseCode, errorNum, errorMessage
* changed ArangoCollection.deleteDocuments() to work with keys and documents
* fixed URL encoding bug (#97)
* fixed update/replaceDocumets with Json (#98)

v4.1.7 (2017-01-26)
---------------------------
* fixed importDocuments, insertDocuments to work with raw Jsons (issue #91)

v4.1.6 (2017-01-18)
---------------------------
* added serializer support for enclosing types

v4.1.5 (2017-01-12)
---------------------------
* fixed VPack String serialization (UTF-8 encoding)
* fixed VPack parsing of fields of type Object
* fixed VPack serializing of array with null values (issue #88)
* added configuration for custom annotations within VPack de-/serialization
* added support of transient modifier within VPack de-/serialization

v4.1.4 (2016-12-19)
---------------------------
* added VPack serializer/de-serializer for java.util.UUID
* fixed VPack parsing (issue #65, #80, #82)

v4.1.3 (2016-11-22)
---------------------------
* fixed error while serializing long values with VPackBuilder
* added bulk import API

v4.1.2 (2016-11-10)
---------------------------
* fixed GraphEntity for ArangoDatabase.getGraphs() (field name is null)
* added VelocyPack UTC_DATE parsing to Json String (ISO 8601)
* added configuration methods for VPackParser in ArangoDB.Builder
* added VPackJsonSerializer for VPackParser

v4.1.1 (2016-11-09)
---------------------------
* changed json parsing of VelocyPack types not known in json
* fixed VelocyPack bug with non-ASCII characters
* added missing replicationFactor in CollectionCreateOptions
* added missing replicationFactor in CollectionPropertiesEntity
* added option serializeNull in DocumentUpdateOptions

v4.1.0 (2016-10-28)
---------------------------
* changed VelocyStream communication (send protocol header)
* added ArangoUtil for manually de-/serialization

v4.0.0 (2016-10-17)
---------------------------
* replaced API
* replaced protocol http with VelocyStream
* added VelocyPack support
* added multi document operations (insert, delete, update, replace)

v3.1.0 (2016-10-17)
---------------------------
* removed Methods with collectionId (long) from ArangoDriver (Id is only for internal usage)
* changed Revision from long to String
* removed Methods with documentId (long) from ArangoDriver
* added profile flag to AqlQueryOptions (issue #47)

v3.0.4 (2016-10-17)
---------------------------
* fixed edges deserializer (issue #50)

v3.0.3 (2016-09-12)
---------------------------
* added error handling in getBatchResponseByRequestId()
* added function createPersistentIndex() (issue #48)
* added deserializer for BaseDocument (issue #50)

v3.0.2 (2016-08-05)
---------------------------
* added profile flag to AqlQueryOptions (issue #47)
* added getExtra() to DocumentCursor<> (issue #47)
* added IndexType.PERSISTENT (issue #48)

v3.0.1 (2016-07-08)
---------------------------
* added flag complete and details in ImportOptions
* fixed issue #43 (ArangoDriver.getAqlFunctions(String) does not uses the defaultDatabase setting)

v3.0.0 (2016-06-17)
---------------------------
* removed ArangoDriver.EdgeEntity() (/_api/edge withdrawn in Server)
* removed CAP-Index (Cap-constraints are withdrawn in Server)
* removed Param database in User-Methods (in 3.0 users are managed in _users Collection in _system Database only) 
* added User-Method grantDatabaseAccess(username, database)
* replaced Graph-Functions (graph_edge, graph_vertices, graph_shortes_path) with AQL
* removed deprecated Methods
* added Transaction attribute allowImplicit
* refactored QueryCachePropertiesEntity, TransactionResultEntity

v2.7.4 (2016-04-15)
---------------------------
* fixed issue #35 (There is no replaceDocumentRaw similar to createDocumentRaw)

v2.7.3 (2016-03-25)
---------------------------
* batch driver performance fix
* fixed issue #33 (typo in ArangoDriver.executeAqlQueryWithDocumentCursorResutl method)   

v2.7.2 (2016-01-22)
---------------------------
* added executeAqlQueryRaw(...). Example src/test/java/com/arangodb/example/document/RawDocumentExample.java

v2.7.1 (2016-01-21)
---------------------------
* added examples for new AQL traversal functions (since ArangoDB 2.8)
* added AQL warnings to CursorResult<?> (hasWarning() and getWarnings())
* added createDocumentRaw(...) and getDocumentRaw(...). Examples src/test/java/com/arangodb/example/document/RawDocumentExample.java
* Updated dependencies gson (2.5), httpclient (4.5.1) and slf4j-api (1.7.13)

v2.7.0 (2015-11-20)
---------------------------
* added document examples in src/test/java/com/arangodb/example/document/
* added graph examples in src/test/java/com/arangodb/example/document/
* new function executeAqlQueryJSON(): Executes an AQL query and returns the raw JSON response as a String
* initial support of HTTPS connections. Examples src/test/java/com/arangodb/example/ssl/


v2.6.9 (2015-10-16)
---------------------------
* add support API: /_api/query-cache/properties (AQL query tracking properties: setQueryTrackingProperties(), getQueryTrackingProperties())
* add support API: /_api/query-cache (delete AQL query cache: deleteQueryCache())
* add support API: /_api/query/current (currently running AQL queries: getCurrentlyRunningQueries())
* add support API: /_api/query/slow (slow AQL queries: getSlowQueries(), deleteSlowQueries())
* add support API: /_api/query (kill AQL queries: killQuery())
* added: boolean exists(long collectionId, long documentId)
* added: boolean exists(String collectionName, long documentId) 
* added: boolean exists(long collectionId, String documentKey) throws ArangoException {
* added: boolean exists(String collectionName, String documentKey)
* added: boolean exists(String documentHandle)

v2.6.8 (2015-09-25)
---------------------------
* fixed GRAPH_EDGES() 2.6-incompatibility
 
v2.5.6 (2015-07-04)
---------------------------
* fixed issue #19
	* createEdge takes graphName but needs database name
* ArangoDB 2.6 support

v2.5.5 (2015-05-23)
---------------------------
* updated driver.getTraversal(...);
	* removed VisitedEntity (Traversal) 
    * added TraversalQueryOptions to avoid too many parameters
* added an examples for Transaction API 
	(see src/test/java/com/arangodb/example/TransactionExample.java)
* fixed issue #17
	* Changed TransactionEntity.ReadWriteCollections to a static class

v2.5.4 (2015-05-03)
---------------------------
* fixed issue #12
    * added auto reconnection when connection breaks
    * added fallback server endpoints
* added new cursor implementation for AQL queries
    * DocumentCursor<T> executeDocumentQuery(...)
    * VertexCursor<T> executeVertexQuery(...)
    * EdgeCursor<T> executeEdgeQuery(...)
* added new cursor implementation for simple queries
    * DocumentCursor<T> executeSimpleAllDocuments(...)
    * DocumentCursor<T> executeSimpleByExampleDocuments(...)
    * DocumentCursor<T> executeSimpleRangeWithDocuments(...)
    * DocumentCursor<T> executeSimpleFulltextWithDocuments(...)
* added some examples for AQL queries 
	(see src/test/java/com/arangodb/example)

v2.5.3 (2015-03-29)
---------------------------
* fixed issue #9
	* added method to driver.getTraversal(...);

v2.5.0
---------------------------
Added support for sparse indexes

v2.4.4
---------------------------
* fixed issue #5
  * added method to driver.createGraph(GraphEntity g); 
* fixed issue #6
* fixed issue #7 

v2.4.3
---------------------------
* Fixed a graph bug: when retrieving a graph via the driver, "from" and "to" were emtpy. This is fixed now. 
* GraphEntity has been changed, so that edge definitions are stored in an EdgeDefinitionsEntity. 
* Some additional methods in GraphEntity:
  * public EdgeDefinitionsEntity getEdgeDefinitionsEntity()
  * public void setEdgeDefinitionsEntity(EdgeDefinitionsEntity edgeDefinitionsEntity)
* Some additional methods in EdgeDefinitionsEntity:
  * public int getSize()
  * public EdgeDefinitionEntity getEdgeDefinition(String collectionName)

v2.4.2
---------------------------
Fixed issue#2

v2.4.1
---------------------------
httpclient version 4.3.6

v1.4.1(2014-02-04)
---------------------------
* rename attribute: UserEntity#user -> UserEntity#username
* add support API: GET /_api/database/user (getDatabases)
* modify API: createDatabase(db) -> createDatabase(db, users...)
* add debug property: enableCURLLogger
* add Annotation @DocumentKey and support user define document key.
* Bug fixed: raise error if _key is not number.
* document API support _key.
* Fixed OraacleJDK build error.(#11)

v1.4.0(2013-11-26)
---------------------------
* support database (for 1.4 feature)
* stop the API of edge, edges in version 1.4.0
* stop the API of kvs(/_api/key) in version 1.4.0(because server does not support yet.)
* add support API: /_api/database/*
* add configure: defaultDatabase
* add support API: /_admin/statistics (getStatistics) 
* add support API: /_admin/statistics-description (statisticsDescription)
* add support API: /_api/endpoint/*
* add support API: /_api/collection/{collection-name}/checksum (getCollectionChecksum)
* add support API: /_api/example/first
* add support API: /_api/example/last
* add support API: /_api/replication/inventory (getReplicationInventory)
* add support API: /_api/replication/dump (getReplicationDump)
* add support API: /_api/replication/server-id (getReplicationServerId)
* add support API: /_api/replication/logger-start (startReplicationLogger)
* add support API: /_api/replication/logger-stop (stopReplicationLogger)
* add support API: GET /_api/replication/logger-state (getReplicationLoggerState)
* add support API: GET /_api/replication/logger-config (getReplicationLoggerConfig)
* add support API: PUT /_api/replication/logger-config (setReplicationLoggerConfig)
* add support API: GET /_api/replication/applier-config (getReplicationApplierConfig)
* add support API: PUT /_api/replication/applier-config (setReplicationApplierConfig)
* add support API: PUT /_api/replication/applier-start (startReplicationApplier)
* add support API: PUT /_api/replication/applier-stop (stopReplicationApplier)
* add support API: GET /_api/replication/applier-state (getReplicationApplierState)
* add support API: POST /_admin/execute (executeScript)
* add support API: POST /_api/graph (createGraph)
* add support API: GET /_api/graph (getGraphs)
* add support API: GET /_api/graph/{graph-name} (getGraph)
* add support API: DELETE /_api/graph/{graph-name} (deleteGraph)
* add support API: POST /_api/graph/{graph-name}/vertex (createVertex)
* add support API: GET /_api/graph/{graph-name}/vertex/{document-key} (getVertex)
* add support API: DELETE /_api/graph/{graph-name}/vertex/{document-key} (deleteVertex)
* add support API: PUT /_api/graph/{graph-name}/vertex/{document-key} (replaceVertex)
* add support API: PATCH /_api/graph/{graph-name}/vertex/{document-key} (updateVertex)
* add support API: POST /_api/graph/{graph-name}/vertices (getVertices)
* add support API: POST /_api/graph/{graph-name}/vertices/{vertex-key} (getVertices)
* add support API: POST /_api/graph/{graph-name}/edge (createEdge)
* add support API: GET /_api/graph/{graph-name}/edge/{edge-key} (getEdge)
* add support API: DELETE /_api/graph/{graph-name}/edge/{edge-key} (deleteEdge)
* add support API: PUT /_api/graph/{graph-name}/edge/{edge-key} (replaceEdge)
* add support API: POST /_api/graph/{graph-name}/edges (getEdges)
* add support API: POST /_api/graph/{graph-name}/edges/{vertex-key} (getEdges)
* add attribute: CollectionEntity#checksum
* add attribute: CollectionEntity#doCompact
* add attribute: CollectionEntity#keyOptions
* add attribute: CollectionEntity.Figures#(compactorsCount,compactorsFileSize,shapefilesCount,shapefilesFileSize,shapesCount,attributesCount)
* add doCompact to argument of createCollection 
* remove attribute: CollectionEntity#createOptions
* getDocuments was changed to return document-handle
* rename method: updateDocument -> replaceDocument
* rename method: partialUpdateDocument -> updateDocument
* changed the version API endpoint. (/_admin/version -> /_api/version)
* changed into createOptions to keyOptions of collection API
* fixed ArangoUnixTime bug.
* remove: getServerStatus
* remove: getConnectionStatistics
* gson library upgrade to 2.2.4
* refactoring deserialize of parameterized entity class.

v1.2.2(2013-07-10)
---------------------------

* add support API: /_api/explain
* add support API: /_api/collection/collection-name/revision
* add support API: /_api/index of fulltext
* add support API: /_api/simple/fulltext
* add support API: /_admin/modules/flush
* add support API: /_admin/routing/reload
* add support API: User Management
* add support: Basic Authentication
* /_api/simple/all and /_api/simple/by-example returns DocumentEntity
* add support import API

v1.2.1(2013-07-02)
------------------

* Add support: load configure from property-file in classpath.
* Add configure: timeout, connectionTimeout, retryCount.
* Remove configure: autoUnknownCollections.
* Change google-gson scope in pom.xml
* Change logback-classic in pom.xml
* Remove README.JA

v1.2.0(2013-06-30)
------------------
* Initial Release.
